version: '3.8'

services:
  app:
    build: .
    command: /start-app.sh
    restart: unless-stopped
    networks:
      - default
      - internal_network
    depends_on:
      - mariadb
      - redis
    env_file:
      - docker.app.env
      - docker.db.env
    volumes:
      - ./storage/logs:/var/www/application/logs
      - ./storage/backup:/var/www/backup
      - ./storage/updates:/var/www/updates
      - ./storage/uploads:/var/www/uploads

  web:
    build: .
    command: /start-web.sh
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - app
    env_file:
      - docker.app.env
    volumes:
      - ./storage/logs:/var/www/application/logs
      - ./storage/backup:/var/www/backup
      - ./storage/updates:/var/www/updates
      - ./storage/uploads:/var/www/uploads
    ports:
      - 80:80

  cron:
    build: .
    command: /start-cron.sh
    restart: unless-stopped
    networks:
      - default
      - internal_network
    depends_on:
      - mariadb
      - redis
    env_file:
      - docker.app.env
      - docker.db.env
    volumes:
      - ./storage/logs:/var/www/application/logs
      - ./storage/backup:/var/www/backup
      - ./storage/updates:/var/www/updates
      - ./storage/uploads:/var/www/uploads

  mariadb:
    restart: unless-stopped
    image: mariadb:10.10
    networks:
      - internal_network
    env_file: docker.db.env
    volumes:
      - ./.mariadb:/var/lib/mysql
  redis:
    image: redis:6.2.6-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./.redis:/data

networks:
  default:
  internal_network:
    internal: true
